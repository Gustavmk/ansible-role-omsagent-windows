---
# tasks file for svendewindt.omsagentwindows

- name: Check whether OMS agent is already installed
  win_service:
    name: HealthService
  register: service_installed
  failed_when: service_installed is not defined
  ignore_errors: yes

- name: Windows 32-bit block
  block:
  - name: Download OMS agent 32-bit
    win_get_url:
      url: '{{ url_omsagentx32 }}'
      dest: '{{ ansible_env.TEMP }}\{{ MMAInstallerName }}'
    when: service_installed.state is not defined or service_installed.name is not defined
  when: ansible_architecture == "32-bit"
  
- name: Windows 64-bit block
  block:
  - name: Download OMS agent 64-bit
    win_get_url:
      url: '{{ url_omsagentx64 }}'
      dest: '{{ ansible_env.TEMP }}\{{ MMAInstallerName }}'
    when: service_installed.state is not defined or service_installed.name is not defined
  when: ansible_architecture == "64-bit"

- name: Install OMS agent
  win_command: '{{ ansible_env.TEMP }}\{{ MMAInstallerName }} /Q:A /R:N /C:"setup.exe /qn ADD_OPINSIGHTS_WORKSPACE=1 OPINSIGHTS_WORKSPACE_ID={{ workspace_id }} OPINSIGHTS_WORKSPACE_KEY={{ workspace_key }} AcceptEndUserLicenseAgreement=1"'
  when: service_installed.state is not defined or service_installed.name is not defined

- name: Remove the OMS Installer file
  win_file:
    path: '{{ ansible_env.TEMP }}\{{ MMAInstallerName }}'
    state: absent
  when: service_installed.state is not defined or service_installed.name is not defined

- name: Make sure the OMS agent service is running and is set to run automatically
  win_service:
    name: HealthService
    start_mode: auto
    state: started

- name: Install dependency agent
  win_package:
    path: "{{ url_dependencyagent }}"
    product_id: "{{ dependencyagent_productid }}"
    arguments: '/S /AcceptEndUserLicenseAgreement:1'
    state: present
  when: install_dependencyagent
